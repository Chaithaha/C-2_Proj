@{
    ViewData["Title"] = "Game Recommendations";
    var recommendations = ViewBag.Recommendations as IEnumerable<GameFinder.Models.Game>;
}

<h2>Game Recommendations</h2>
<p>Get personalized game recommendations based on genre and platform.</p>

<form asp-action="GameRecs" method="get">
    <div class="form-group">
        <label for="genreId">Genre:</label>
        <select id="genreId" name="genreId" class="form-control" asp-items="@(new SelectList(ViewBag.Genres, "Id", "Name"))">
            <option value="0">--Select Genre--</option>
        </select>
    </div>
    <div class="form-group">
        <label for="platformId">Platform:</label>
        <select id="platformId" name="platformId" class="form-control" asp-items="@(new SelectList(ViewBag.Platforms, "Id", "Name"))">
            <option value="0">--Select Platform--</option>
        </select>
    </div>
    <button type="submit" class="btn btn-primary">Get Recommendations</button>
</form>

@if (ViewBag.Error != null)
{
    <div class="alert alert-danger mt-3">@ViewBag.Error</div>
}

@if (recommendations != null)
{
    <h3 class="mt-4">Recommended Games</h3>
    @if (recommendations.Any())
    {
        <table class="table">
            <thead>
                <tr>
                    <th>Title</th>
                    <th>Genre</th>
                    <th>Platform</th>
                    <th>Rating</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var game in recommendations)
                {
                    <tr>
                        <td>@game.Title</td>
                        <td>@game.Genre?.Name</td>
                        <td>@game.Platform?.Name</td>
                        <td>@game.Rating</td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        <p>No games found matching your criteria.</p>
    }
}
